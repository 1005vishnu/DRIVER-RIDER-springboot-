name: CI/CD Pipeline

on:
  push:
    branches: [ main, master, addons ]
  pull_request:
    branches: [ main, master, addons ]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      MAVEN_OPTS: '-Xmx1024m'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build with Maven Wrapper
        run: ./mvnw -B clean package

      - name: Run unit tests
        run: ./mvnw test -Dsurefire.reportFormat=plain

      - name: Run integration tests
        run: ./mvnw verify -Dsurefire.reportFormat=plain

      - name: Check for Target Directory
        id: check_target
        run: if [ -d target ]; then echo "Target exists"; else exit 1; fi

      - name: Upload build artifact
        if: always() && steps.check_target.outcome == 'success'
        uses: actions/upload-artifact@v3
        with:
          name: build-artifact
          path: target/

  deploy:
    needs: build
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: vishnuganesh/ridehailing:latest

      - name: Logout from Docker Hub
        run: docker logout